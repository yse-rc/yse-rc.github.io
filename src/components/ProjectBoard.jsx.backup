import React, { useState } from 'react';
import { tasks } from '../data/tasks';
import { newsItems } from '../data/news';
import { events } from '../data/events';

const MailIcon = () => (
  <svg 
    xmlns="http://www.w3.org/2000/svg" 
    width="16" 
    height="16" 
    viewBox="0 0 24 24" 
    fill="none" 
    stroke="currentColor" 
    strokeWidth="2" 
    strokeLinecap="round" 
    strokeLinejoin="round"
  >
    <rect x="2" y="4" width="20" height="16" rx="2"/>
    <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/>
  </svg>
);

const NavDropdown = ({ title, options }) => {
  const [isOpen, setIsOpen] = useState(false);
  
  return (
    <div className="relative inline-block">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="px-4 py-2 text-black hover:text-gray-700 font-semibold text-sm bg-white"
        onBlur={() => setTimeout(() => setIsOpen(false), 200)}
      >
        {title}
      </button>
      {isOpen && (
        <div className="absolute left-0 mt-1 py-2 w-48 bg-white rounded-lg shadow-lg z-10">
          {options.map((option, index) => (
            <button
              key={index}
              onClick={() => {
                console.log(`Clicked ${option}`);
                setIsOpen(false);
              }}
              className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 bg-white"
            >
              {option}
            </button>
          ))}
        </div>
      )}
    </div>
  );
};

const ProjectBoard = () => {
  const [columns] = useState(tasks);
  const [showForm, setShowForm] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });

  const handleSubmit = (projectId, e) => {
    e.preventDefault();
    console.log('Interest shown in project:', projectId, formData);
    setFormData({ name: '', email: '', message: '' });
    setShowForm(null);
    alert('Thanks for your interest! We will contact you soon.');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="w-full px-6 py-4 bg-white border-b border-gray-200">
        <div className="flex items-center gap-8 max-w-[2400px] mx-auto">
          <h1 className="text-3xl text-black" 
              style={{ fontFamily: 'Optima, Candara, "Noto Sans", sans-serif', fontWeight: 400 }}>
            YSE Research Computing and Data
          </h1>
          <div className="flex gap-6">
            <NavDropdown title="Services" options={["Request Consult"]} />
            <NavDropdown title="Docs" options={["Recommendations", "HPC", "DiSCC", "YCRC"]} />
            <NavDropdown title="Info" options={["Who", "What", "How Much"]} />
          </div>
        </div>
      </div>

      <div className="p-6 max-w-[2400px] mx-auto">
        {/* Projects Section */}
        <div className="bg-white rounded-lg shadow-sm p-6 border-t-4 border-gray-400">
          <h2 className="text-2xl font-semibold mb-6 text-gray-800 border-b pb-3">
            Projects
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {columns.map(column => (
              <div
                key={column.id}
                className={`rounded-lg shadow-sm p-6 border-t-4 ${column.borderColor} bg-gray-50`}
                style={{ fontFamily: '"Avenir Next", "Segoe UI", system-ui, sans-serif' }}
              >
                <h3 className="font-semibold text-lg mb-6 text-gray-800 border-b pb-3">
                  {column.title}
                </h3>

                <div className="space-y-6">
                  {column.projects.map(project => (
                    <div
                      key={project.id}
                      className="bg-white rounded-lg p-5 border border-gray-200"
                    >
                      <h4 className="font-semibold text-base text-gray-800 mb-3">
                        {project.title}
                      </h4>
                      <p className="text-gray-600 text-sm mb-4">
                        {project.description}
                      </p>
                      <div className="flex flex-wrap gap-2 mb-4">
                        {project.tech.map(tech => (
                          <span
                            key={tech}
                            className="bg-gray-100 text-gray-700 text-xs px-3 py-1 rounded-full"
                          >
                            {tech}
                          </span>
                        ))}
                      </div>
                      <div className="text-sm text-gray-500 mb-4">
                        Started: {new Date(project.startDate).toLocaleDateString()}
                      </div>
                      {/* Express Interest Form Logic */}
                      {showForm === project.id ? (
                        <form
                          onSubmit={(e) => handleSubmit(project.id, e)}
                          className="mt-4 space-y-4"
                        >
                          <input
                            type="text"
                            placeholder="Your Name"
                            className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
                            value={formData.name}
                            onChange={(e) =>
                              setFormData({ ...formData, name: e.target.value })
                            }
                            required
                          />
                          <input
                            type="email"
                            placeholder="Your Email"
                            className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
                            value={formData.email}
                            onChange={(e) =>
                              setFormData({ ...formData, email: e.target.value })
                            }
                            required
                          />
                          <textarea
                            placeholder="Why are you interested in this project?"
                            className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
                            value={formData.message}
                            onChange={(e) =>
                              setFormData({ ...formData, message: e.target.value })
                            }
                            required
                            rows={3}
                          />
                          <div className="flex gap-3">
                            <button
                              type="submit"
                              className="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors"
                            >
                              Submit Interest
                            </button>
                            <button
                              type="button"
                              onClick={() => setShowForm(null)}
                              className="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-700 px-4 py-2 rounded-lg transition-colors"
                            >
                              Cancel
                            </button>
                          </div>
                        </form>
                      ) : (
                        <button
                          onClick={() => setShowForm(project.id)}
                          className="w-full mt-2 flex items-center justify-center gap-2 text-gray-700 bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded-lg transition-colors"
                        >
                          <MailIcon />
                          <span>Express Interest</span>
                        </button>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>


        {/* News Section */}
        <div className="mt-12 bg-white rounded-lg shadow-sm p-6 border-t-4 border-blue-400">
          <h2 className="text-2xl font-semibold mb-6 text-gray-800 border-b pb-3">
            News
          </h2>
          <div className="space-y-6">
            {newsItems.map(item => (
              <div
                key={item.id}
                className="bg-gray-50 rounded-lg p-5 border border-gray-100"
              >
                <h3 className="font-semibold text-lg text-gray-800 mb-3">
                  {item.title}
                </h3>
                <p className="text-gray-600 leading-relaxed mb-4">{item.description}</p>
                <a
                  href={item.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-800 hover:underline inline-flex items-center gap-1"
                >
                  {item.linkText}
                  <svg
                    className="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                    />
                  </svg>
                </a>
              </div>
            ))}
          </div>
        </div>

        {/* Events Section */}
        <div className="mt-12 bg-white rounded-lg shadow-sm p-6 border-t-4 border-purple-400">
          <h2 className="text-2xl font-semibold mb-6 text-gray-800 border-b pb-3">
            Events
          </h2>
          <div className="space-y-6">
            {events.map(event => (
              <div
                key={event.id}
                className="bg-gray-50 rounded-lg p-5 border border-gray-100"
              >
                <h3 className="font-semibold text-lg text-gray-800 mb-2">
                  {event.title}
                </h3>
                <div className="text-gray-600 mb-2">
                  <p>{event.date} • {event.time}</p>
                  <p>{event.location}</p>
                </div>
                <p className="text-gray-600 mb-4">{event.description}</p>
                {event.registrationLink && (
                  <a
                    href={event.registrationLink}
                    className="inline-block bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors"
                  >
                    Register
                  </a>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProjectBoard;
